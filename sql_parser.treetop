grammar Sql
  rule query
    space* select_statement space
    (from_statement (space join_statement)* )? <Query>
  end

  rule select_statement
    'select' space select_expressions <Statement>
  end

  rule join_statement
    ('left' / 'outer' / 'inner' / 'right' / 'full' / space)* 'join' space expression space* ('as' space)? (alias space)? 'on' space expression
  end

  rule select_expressions
    select_expression (select_separator select_expression)* <Entity>
  end

  rule select_separator
    space* ',' space* <Entity>
  end

  rule select_expression
    expression space 'as' space alias <Entity>
    /
    expression
    /
    expression space alias <Entity>
  end

  rule alias
    '"' [^\"] '"'
    /
    (!('on')) [\w]+
  end

  rule expression
    '(' query ')' <Query>
    /
    '(' expression ')'
    /
    sub_expression space* operator space* expression
    /
    sub_expression
  end

  rule sub_expression
    case_statement
    /
    function
    /
    string_literal
    /
    field_entity
  end

  rule operator
    [+-/=\|><]+ / 'is not' / 'is' / 'like' / 'not in' / 'in'
  end

  rule case_statement
    'case' space ('when' space expression space 'then' space expression space)* ('else' space expression space)? 'end' <Entity>
  end

  rule function
    [\w]+ space* '(' (expression / ',' / space)* ')' <Entity>
  end

  rule string_literal
    "'" [^\']+ "'"
  end

  rule field_entity
    '"' [\w ]+ '.*'? '"' <QuotedEntity>
    /
    [\w]+ '.*'?  <Entity>
    /
    ('*') <Entity>
  end

  rule from_statement
    'from' space+ from_expression ((space 'as')? space alias)? <Statement>
  end

  rule from_expression
    [\w]+ <Entity>
  end

  rule space
    [\s]+
  end

end
